name: CI/CD Pipeline for Java Maven App

on:
  push:
    branches: [ master ]

jobs:
  build-and-push:
# ubuntu server has docker pre-installed
    runs-on: ubuntu-latest

    env:
      IMAGE_NAME: talmc/weatherapp
      VERSION_FILE: pom.xml

    steps:
    # Checkout the code
    - name: Checkout repository
      uses: actions/checkout@v4

    # Set up Java & Maven
    - name: Set up JDK 21
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: '21'
        cache: 'maven'

    - name: Bump patch version (simple XML patch)
      run: |
        CURRENT_VERSION=$(grep -m 1 '<version>' pom.xml | sed 's/.*<version>\(.*\)<\/version>.*/\1/')
        BASE=$(echo $CURRENT_VERSION | cut -d. -f1,2)
        PATCH=$(echo $CURRENT_VERSION | cut -d. -f3 | sed 's/-SNAPSHOT//')
        NEXT_PATCH=$((PATCH + 1))
        NEW_VERSION="$BASE.$NEXT_PATCH-SNAPSHOT"
        echo "New version: $NEW_VERSION"
        sed -i "0,/<version>.*<\/version>/s//<version>$NEW_VERSION<\/version>/" pom.xml
    # Build project
    - name: Build with Maven
      run: mvn clean package

    # Build Docker image using multistage Dockerfile
    - name: Build Docker image
      run: docker build -t $IMAGE_NAME:${{ github.run_number }} .

    # Login to Docker Hub
    - name: Docker Login
      run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

    # Push Docker image
    - name: Push image to Docker Hub
      run: docker push $IMAGE_NAME:${{ github.run_number }}
